Run ./sandbox-init to run all examples and show the problem with 'cabal repl' and lol.


hlibWithC has a pure-C library linked to a Haskell library using cabal.
It compiles, builds the test, and the test executes successfully. I can also run 'cabal repl'

hlibWithCPP is similar to hlibWithC, but the C library is modified slightly to be a C++ library. Linking still occurs with cabal thanks to n.m.'s helpful comment regarding the use of __cplusplus.
It compiles, builds the test, and the test executes successfully. I can also run 'cabal repl'

simplelib is a pure Haskell library that depends on hlibWithCPP.
It compiles, builds the test, and the test executes successfully. I can also run 'cabal repl'

loltest *should* be similar to hlibWithCPP: it is a trimmed down version of "lol", with a C++ library that is linked by cabal.
Unfortunately, 'cabal repl' fails with

ghc: panic! (the 'impossible' happened)
  (GHC version 7.10.3 for x86_64-unknown-linux):
  Loading temp shared object failed: /tmp/ghc113133_0/libghc_1.so: undefined symbol: _ZN2Zq1qE


I'm not quite ready to report this as a GHC bug (despite the panic), because GHC also panics when a file is not found. Suspiciously, the last bit of 'cabal repl -v3' is:

*** Deleting temp files:
Deleting: /tmp/ghc113237_0/ghc_2.rsp /tmp/ghc113237_0/libghc_1.so
*** Deleting temp dirs:
Deleting: /tmp/ghc113237_0
ghc: panic! (the 'impossible' happened)
  (GHC version 7.10.3 for x86_64-unknown-linux):
  Loading temp shared object failed: /tmp/ghc113237_0/libghc_1.so: undefined symbol: _ZN2Zq1qE


so cabal deletes the directory "/tmp/ghc113237_0"
and then complains that it failed to load an object file in that directory...